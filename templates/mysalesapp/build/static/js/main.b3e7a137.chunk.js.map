{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","helperText","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","target","convertToDefEventPara","Button","text","size","onClick","ActionButton","children","Form","autoComplete","KEYS","getAllEmployees","localStorage","getItem","setItem","JSON","stringify","console","log","parse","initialFValues","id","fullName","email","LeadsAssigned","yettopick","demoscheduled","demodone","followup","notreachable","dead","won","hireDate","Date","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","validateOnChange","useState","setValues","handleInputChange","e","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","InputLabelProps","shrink","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","map","headCell","TableCell","key","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","arr","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","DialogActions","onConfirm","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setTest","items","setFilterFn","fetchData","axios","get","then","res","data","catch","err","InputProps","InputAdornment","filter","toLowerCase","includes","startIcon","TableBody","openInPopup","ids","employee","post","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3e7a137.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'fixed',\n        left: '0px',\n        width: '2px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);","\nimport React from 'react'\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n        \n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container\n                    alignItems=\"center\">\n                    <Grid item>\n                        <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid>\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={3} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(2),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}","import Input from \"./Input\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n\n\n\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}","\r\n\r\nimport axios from 'axios'\r\n\r\nconst KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport function insertEmployee(data) {\r\n    console.log(data)\r\n    //axios.get('http://127.0.0.1:5000/spyneweb/', data)\r\n\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\n\r\nexport function updateEmployee(data) {\r\n    //console.log(data)\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\n\r\nexport function getAllEmployees() {  \r\n    \r\n    // axios.get('http://127.0.0.1:5000/spyneweb/get_all/')\r\n\r\n    // .then((res) => {\r\n    //         //alert(res.data)\r\n    //         console.log(typeof(res.data))    //It is object.\r\n\r\n    //         // return JSON.parse(res.data);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err)\r\n    //     })\r\n\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    \r\n    console.log(typeof(JSON.parse(localStorage.getItem(KEYS.employees))))\r\n    //alert(JSON.parse(localStorage.getItem(KEYS.employees)))\r\n    //print(res.data)\r\n\r\n    return JSON.parse(localStorage.getItem(KEYS.employees));   // it is an object\r\n\r\n}\r\n// export function test() {  \r\n//     var arr \r\n//     axios.get('http://127.0.0.1:5000/spyneweb/get_all/')\r\n\r\n//     .then((res) => {\r\n//             //alert(res.data)\r\n//             console.log(typeof(res.data))   \r\n//             arr.push(res.data) //It is object.\r\n//         })\r\n//         .catch((err) => {\r\n//             console.log(err)\r\n//         })\r\n\r\n    // if (localStorage.getItem(KEYS.employees) == null)\r\n    //     localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    \r\n    // console.log(typeof(JSON.parse(localStorage.getItem(KEYS.employees))))\r\n    //alert(JSON.parse(localStorage.getItem(KEYS.employees)))\r\n    //print(res.data)\r\n\r\n    // return JSON.parse(localStorage.getItem(KEYS.employees));   // it is an object\r\n//     return arr\r\n// }\r\n\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField} from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    LeadsAssigned: '0',\r\n    yettopick: '0',\r\n    demoscheduled: '0',\r\n    demodone: '0',\r\n    followup: '0',\r\n    notreachable: '0',\r\n    dead: '0',\r\n    won: '0',\r\n    hireDate: new Date(),\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    \r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n     const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={6}>\r\n\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n\r\n                    <TextField                                                     \r\n                        id=\"filled-number\"\r\n                        label=\"Leads Assigned\"\r\n                        name = 'LeadsAssigned'\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                             }}\r\n                        variant=\"filled\"\r\n                        onChange={handleInputChange}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3}>\r\n\r\n                    <TextField                                                     \r\n                        id=\"filled-number\"\r\n                        label=\"Yet to pick\"\r\n                        name = 'yettopick'\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                             }}\r\n                        variant=\"filled\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                     </Grid>\r\n              \r\n\r\n            \r\n                <Grid item xs={6}>\r\n\r\n                <Controls.Input\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                    error={errors.email}\r\n                    />\r\n\r\n               \r\n                 </Grid>\r\n\r\n                 <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                    id=\"filled-number\"\r\n                    label=\"Demo Scheduled\"\r\n                    name = 'demoscheduled'\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    variant=\"filled\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                    id=\"filled-number\"\r\n                    label=\"Demo Done\"\r\n                    name = 'demodone'\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    variant=\"filled\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n\r\n                   <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                    id=\"filled-number\"\r\n                    label=\"Follow up\"\r\n                    name = 'followup'\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                        }}\r\n                    variant=\"filled\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n                <Grid item xs={6}>\r\n\r\n                <Controls.DatePicker\r\n                    name=\"hireDate\"\r\n                    label=\"Date\"\r\n                    value={values.hireDate}\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                    id=\"filled-number\"\r\n                    label=\"Not Reachable\"\r\n                    name = 'notreachable'\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                             }}\r\n                    variant=\"filled\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                        id=\"filled-number\"\r\n                        label=\"Dead\"\r\n                        name = 'dead'\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                             }}\r\n                        variant=\"filled\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n\r\n\r\n                  <Grid item xs={2}>\r\n\r\n                 <TextField                                                     \r\n                        id=\"filled-number\"\r\n                        label=\"Won\"\r\n                        name = 'won'\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                             }}\r\n                        variant=\"filled\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n\r\n                  </Grid>\r\n\r\n\r\n                  <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n        </Grid>\r\n        </Form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [30, 60, 90]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n    \r\n\r\n  function stableSort(array, comparator) {\r\n        console.log(typeof(arr))\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                severity={notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","\r\nimport React, { useState,useEffect } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport {getAllEmployees} from '../../services/employeeService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(1),  \r\n        padding: theme.spacing(1)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'hireDate', label: 'Date' },\r\n    { id: 'LeadsAssigned', label: 'LeadsAssigned', disableSorting: true  },  \r\n    { id: 'yettopick', label: 'Yet to pick', disableSorting: true  }, \r\n    { id: 'demoscheduled', label: 'Demo Scheduled', disableSorting: true  },\r\n    { id: 'demodone', label: 'Demo Done', disableSorting: true  },\r\n    { id: 'followup', label: 'FollowUp', disableSorting: true  },\r\n    { id: 'notreachable', label: 'Not Reachable', disableSorting: true  },\r\n    { id: 'dead', label: 'Dead', disableSorting: true  },\r\n    { id: 'won', label: 'Won', disableSorting: true  },\r\n    { id: 'actions', label: 'Actions', disableSorting: true },\r\n   \r\n]\r\n\r\nexport default function Employees() {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [test,setTest] = useState([])\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [flag_delete, setFlagDelete] = useState(false)\r\n    \r\n    console.log(test)\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        console.log(employee)\r\n        if (employee.id == 0)\r\n            axios.post(\"/spyneweb/insertion/\", employee)\r\n            .then((res) => {\r\n            fetchData()\r\n        })\r\n\r\n        else\r\n            axios.post(\"/spyneweb/updatation/\", employee)\r\n            .then((res) => {\r\n            fetchData()\r\n        })\r\n\r\n        resetForm()\r\n\r\n        setRecordForEdit(null)\r\n\r\n        setOpenPopup(false)\r\n\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = ids => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n\r\n        axios.get(`/spyneweb/deletion/${ids}`)\r\n        .then((res) => {\r\n            fetchData()\r\n        })\r\n       \r\n\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n    useEffect(() => {\r\n    fetchData()\r\n\r\n    },[])\r\n\r\n    const fetchData = () => {\r\n\r\n    axios.get('/spyneweb/get_all/')\r\n\r\n    .then((res) => {\r\n            setTest(res.data)//It is object.\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    console.log(test)\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(test, headCells, filterFn);\r\n    console.log(test)\r\n    return (\r\n        <>\r\n        \r\n        <PageHeader\r\n                title=\"Spyne Web\"\r\n                subTitle=\"All Leads\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n\r\n\r\n\r\n           \r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n\r\n\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.hireDate}</TableCell>\r\n                                    <TableCell>{item.LeadsAssigned}</TableCell>\r\n                                    <TableCell>{item.yettopick}</TableCell>\r\n                                    <TableCell>{item.demoscheduled}</TableCell>\r\n                                    <TableCell>{item.demodone}</TableCell>\r\n                                    <TableCell>{item.followup}</TableCell>\r\n                                    <TableCell>{item.notreachable}</TableCell>\r\n                                    <TableCell>{item.dead}</TableCell>\r\n                                    <TableCell>{item.won}</TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n\r\n                                    </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"New Entry\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport SideMenu from \"../components/SideMenu\";\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"../components/Header\";\nimport PageHeader from '../components/PageHeader';\nimport Employees from \"../pages/Employees/Employees\";\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '2px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        \n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}